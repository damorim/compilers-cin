package walker;

import org.antlr.v4.runtime.ParserRuleContext;
import org.antlr.v4.runtime.tree.ErrorNode;
import org.antlr.v4.runtime.tree.TerminalNode;

import autogenerated.listener.AnnotExpBaseListener;
import autogenerated.listener.AnnotExpParser;



public class AnnotExpExtendListener extends AnnotExpBaseListener {
	@Override
	public void enterS(AnnotExpParser.SContext ctx) {
		System.out.println("Entering s rule: " + ctx.getText( ));
	}

	@Override 
	public void exitS(AnnotExpParser.SContext ctx) { 
		System.out.println("Exiting s rule: " + ctx.getText( ));
	}
	
	@Override 
	public void enterMulExp(AnnotExpParser.MulExpContext ctx) { 
		System.out.println("Entering MulExp rule: " + ctx.getText( ));
	}
	
	@Override 
	public void exitMulExp(AnnotExpParser.MulExpContext ctx) {
		System.out.println("Exiting MulExp rule: " + ctx.getText( ));
	}
	
	@Override 
	public void enterAddExp(AnnotExpParser.AddExpContext ctx) {
		System.out.println("Entering AddExp rule: " + ctx.getText( ));
	}
	
	@Override 
	public void exitAddExp(AnnotExpParser.AddExpContext ctx) {
		System.out.println("Exiting AddExp rule: " + ctx.getText( ));
	}
	
	@Override 
	public void enterInt(AnnotExpParser.IntContext ctx) {
		System.out.println("Entering Int rule: " + ctx.getText( ));
	}
	
	@Override 
	public void exitInt(AnnotExpParser.IntContext ctx) {
		System.out.println("Exiting Int rule: " + ctx.getText( ));
	}

	@Override 
	public void enterEveryRule(ParserRuleContext ctx) {
		System.out.println("Entering rule: " + ctx.getText( ));
	}
	
	@Override 
	public void exitEveryRule(ParserRuleContext ctx) {
		System.out.println("Exiting rule: " + ctx.getText( ));
	}
	
	@Override 
	public void visitTerminal(TerminalNode node) {
		System.out.println("Terminal node: " + node.getText( ));
	}
	
	@Override 
	public void visitErrorNode(ErrorNode node) {
		System.out.println("Error node: " + node.getText( ));
	}

}
