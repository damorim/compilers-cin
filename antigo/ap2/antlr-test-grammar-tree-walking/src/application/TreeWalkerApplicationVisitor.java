package application;

import java.io.IOException;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.tree.*;

import autogenerated.*;
import walker.TestExtendVisitor;



public class TreeWalkerApplicationVisitor {
	public static ANTLRInputStream getStandardInputStream( ) throws IOException {
		return (new ANTLRInputStream(System.in));
	}
	
	public static ANTLRInputStream getFileInputStream(String filePath) throws IOException {
		return (new ANTLRFileStream(filePath));
	}
	
	public static void main(String[] args) throws IOException {
		//Create a CharStream that reads from standard input
		ANTLRInputStream input = getStandardInputStream( );
		//Create a lexer that feeds off of input CharStream
		TestLexer lexer = new TestLexer(input);
		//Create a buffer of tokens pulled from the lexer
		CommonTokenStream tokens = new CommonTokenStream(lexer);
		//Create a parser that feeds off the tokens buffer
		TestParser parser = new TestParser(tokens);
		//Begin parsing at init rule
		ParseTree tree = parser.stat( );
		
		//Create the visitor
		TestExtendVisitor visitor = new TestExtendVisitor( );
		//Visit the tree created by the parser
		System.out.println(tree.accept(visitor));
	}
}
